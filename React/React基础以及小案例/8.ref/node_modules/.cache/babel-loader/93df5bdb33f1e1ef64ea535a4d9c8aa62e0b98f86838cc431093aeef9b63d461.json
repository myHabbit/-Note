{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G1330\\\\Desktop\\\\react\\\\8.ref\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  /* \r\n    react如何获取原生DOM对象\r\n      1：使用传统的document对dom进行操作\r\n      2：直接从react处获取dom对象\r\n            步骤：\r\n               1：创建一个存储dom对象的容器\r\n                   使用useRef() 钩子函数\r\n                      钩子函数的注意事项 ：\r\n                         1. react的钩子函数只能用于函数组件或者自定义钩子\r\n               2: \r\n  */\n\n  const h1Ref = useRef(); //创建一个容器\n\n  const clickHandler = () => {\n    //  通过id获取h1\n    // const header = document.getElementById('header')\n    // header.innerHTML = '哈哈哈'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'app',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"header\",\n      children: \"\\u6211\\u662F\\u6807\\u9898\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n_s(App, \"zFFc1Rm+qHCiLNgxeGfx13Q+EPc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","jsxDEV","_jsxDEV","App","_s","h1Ref","clickHandler","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/G1330/Desktop/react/8.ref/src/App.js"],"sourcesContent":["import './App.css'\r\nimport { useRef } from 'react'\r\nconst App = () => {\r\n    /* \r\n      react如何获取原生DOM对象\r\n        1：使用传统的document对dom进行操作\r\n        2：直接从react处获取dom对象\r\n              步骤：\r\n                 1：创建一个存储dom对象的容器\r\n                     使用useRef() 钩子函数\r\n                        钩子函数的注意事项 ：\r\n                           1. react的钩子函数只能用于函数组件或者自定义钩子\r\n                 2: \r\n    */\r\n\r\n    const h1Ref = useRef()    //创建一个容器\r\n   \r\n\r\n    \r\n    const clickHandler = () => {\r\n        //  通过id获取h1\r\n        // const header = document.getElementById('header')\r\n        // header.innerHTML = '哈哈哈'\r\n\r\n    }\r\n\r\n    return <div className={'app'}>\r\n        <h1 id='header'>我是标题</h1>\r\n        <button onClick={clickHandler} >1</button>\r\n        <button >2</button>\r\n    </div>\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,MAAM,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,MAAMC,KAAK,GAAGL,MAAM,CAAC,CAAC,EAAI;;EAI1B,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA;IACA;EAAA,CAEH;EAED,oBAAOJ,OAAA;IAAKK,SAAS,EAAE,KAAM;IAAAC,QAAA,gBACzBN,OAAA;MAAIO,EAAE,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBX,OAAA;MAAQY,OAAO,EAAER,YAAa;MAAAE,QAAA,EAAE;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CX,OAAA;MAAAM,QAAA,EAAS;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AACV,CAAC;AAAAT,EAAA,CA7BKD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AA+BT,eAAeA,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}