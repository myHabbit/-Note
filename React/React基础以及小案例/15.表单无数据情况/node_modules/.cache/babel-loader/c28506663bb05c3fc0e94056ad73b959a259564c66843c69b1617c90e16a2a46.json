{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G1330\\\\Desktop\\\\react\\\\10.\\u6DFB\\u52A0card\\u7EC4\\u4EF6\\\\src\\\\Components\\\\Logs\\\\LogItem.js\";\nimport React from 'react';\nimport MyDate from './MyDate';\nimport '../Logs/LogItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogItem(props) {\n  // 在函数组件中 属性就相当于是函数的参数  可以通过参数来访问\n  // 在函数组件的形参中 定义一个props  \n  // 它包含了父组件传递的所有参数\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(MyDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"desc\",\n        children: props.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: props.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = LogItem;\nfunction sum(a, b) {\n  return a + b;\n}\nvar _c;\n$RefreshReg$(_c, \"LogItem\");","map":{"version":3,"names":["React","MyDate","jsxDEV","_jsxDEV","LogItem","props","className","children","date","fileName","_jsxFileName","lineNumber","columnNumber","desc","time","_c","sum","a","b","$RefreshReg$"],"sources":["C:/Users/G1330/Desktop/react/10.添加card组件/src/Components/Logs/LogItem.js"],"sourcesContent":["import React from 'react'\r\nimport MyDate from './MyDate'\r\n\r\nimport '../Logs/LogItem.css'\r\nexport default function LogItem(props) {\r\n  // 在函数组件中 属性就相当于是函数的参数  可以通过参数来访问\r\n  // 在函数组件的形参中 定义一个props  \r\n  // 它包含了父组件传递的所有参数\r\n  return (\r\n    <div className='item'>\r\n      <MyDate date={props.date}></MyDate>\r\n      {/* 日志内容容器 */}\r\n      <div className='content'>\r\n        {/* \r\n             如果将组件中的数据全部写死 将会导致我们组件无法动态设置 不具有实用价值\r\n               我们希望组件数据可以由外部传递进来，在组件间 ，父组件可以给props向子组件传递数据\r\n        */}\r\n        <h2 className='desc'>{props.desc}</h2>\r\n        <div className='time'>{props.time}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction sum(a, b) {\r\n  return a + b\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC5B,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EACrC;EACA;EACA;EACA,oBACEF,OAAA;IAAKG,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBJ,OAAA,CAACF,MAAM;MAACO,IAAI,EAAEH,KAAK,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAEnCT,OAAA;MAAKG,SAAS,EAAC,SAAS;MAAAC,QAAA,gBAKtBJ,OAAA;QAAIG,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEF,KAAK,CAACQ;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCT,OAAA;QAAKG,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEF,KAAK,CAACS;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACG,EAAA,GAlBuBX,OAAO;AAoB/B,SAASY,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACjB,OAAOD,CAAC,GAAGC,CAAC;AACd;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}