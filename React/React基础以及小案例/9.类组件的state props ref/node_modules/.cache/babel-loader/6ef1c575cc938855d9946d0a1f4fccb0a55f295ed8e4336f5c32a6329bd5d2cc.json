{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G1330\\\\Desktop\\\\react\\\\9.\\u7C7B\\u7EC4\\u4EF6\\u7684state props ref\\\\src\\\\Components\\\\user.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class user extends Component {\n  constructor() {\n    super(...arguments);\n    /* \r\n      类组件中的props是存储到类的实例对象的上的\r\n         可以直接通过实例对象访问\r\n           this.props\r\n          类组件中 state统一存储在了实例对象的state属性当中\r\n         可以通过 this.state 访问\r\n          通过this.setState对其进行修改\r\n          当我们通过this.setState() 修改state时\r\n              react只会修改设置了的属性\r\n         函数组件中 事件响应函数可以直接以函数的形式定义在组件中\r\n           类组件中  响应函数以类的方法来定义\r\n           但是这仅限于直接存储在state中的属性\r\n    */\n    this.state = {\n      count: 0,\n      test: '哈哈',\n      obj: {\n        name: '孙悟空',\n        age: 18\n      }\n    };\n    this.clickHandler = () => {\n      // this.setState({\n      //     count: 10\n      // })\n\n      this.setState({\n        obj: {\n          ...this.state.obj,\n          name: '沙和尚'\n        }\n      });\n      // this.setState(prevSate => {\n      //     return {\n      //         count: prevSate.count + 1\n      //     }\n      // })\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [this.state.count, \"--\", this.state.test]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [this.state.obj.name, \"--\", this.state.obj.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clickHandler,\n        children: \"\\u70B9\\u6211\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u59D3\\u540D\\uFF1A\", this.props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u5E74\\u9F84:\", this.props.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\u6027\\u522B: \", this.props.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","user","constructor","arguments","state","count","test","obj","name","age","clickHandler","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","props","gender"],"sources":["C:/Users/G1330/Desktop/react/9.类组件的state props ref/src/Components/user.js"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class user extends Component {\r\n    /* \r\n      类组件中的props是存储到类的实例对象的上的\r\n         可以直接通过实例对象访问\r\n           this.props\r\n\r\n\r\n      类组件中 state统一存储在了实例对象的state属性当中\r\n         可以通过 this.state 访问\r\n          通过this.setState对其进行修改\r\n          当我们通过this.setState() 修改state时\r\n              react只会修改设置了的属性\r\n\r\n       函数组件中 事件响应函数可以直接以函数的形式定义在组件中\r\n           类组件中  响应函数以类的方法来定义\r\n           但是这仅限于直接存储在state中的属性\r\n    */\r\n\r\n    state = {\r\n        count: 0,\r\n        test: '哈哈',\r\n        obj: { name: '孙悟空', age: 18 }\r\n    };\r\n\r\n    clickHandler = () => {\r\n        // this.setState({\r\n        //     count: 10\r\n        // })\r\n\r\n        this.setState({\r\n            obj: {...this.state.obj ,name: '沙和尚'}\r\n        })\r\n        // this.setState(prevSate => {\r\n        //     return {\r\n        //         count: prevSate.count + 1\r\n        //     }\r\n        // })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>{this.state.count}--{this.state.test}</h1>\r\n                <h2>{this.state.obj.name}--{this.state.obj.age}</h2>\r\n\r\n                <button onClick={this.clickHandler}>点我</button>\r\n                <ul>\r\n                    <li>姓名：{this.props.name}</li>\r\n                    <li>年龄:{this.props.age}</li>\r\n                    <li>性别: {this.props.gender}</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,MAAMC,IAAI,SAASH,SAAS,CAAC;EAAAI,YAAA;IAAA,SAAAC,SAAA;IACxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAZI,KAiBAC,KAAK,GAAG;MACJC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE;QAAEC,IAAI,EAAE,KAAK;QAAEC,GAAG,EAAE;MAAG;IAChC,CAAC;IAAA,KAEDC,YAAY,GAAG,MAAM;MACjB;MACA;MACA;;MAEA,IAAI,CAACC,QAAQ,CAAC;QACVJ,GAAG,EAAE;UAAC,GAAG,IAAI,CAACH,KAAK,CAACG,GAAG;UAAEC,IAAI,EAAE;QAAK;MACxC,CAAC,CAAC;MACF;MACA;MACA;MACA;MACA;IACJ,CAAC;EAAA;;EAKDI,MAAMA,CAAA,EAAG;IAEL,oBACIZ,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,GAAK,IAAI,CAACT,KAAK,CAACC,KAAK,EAAC,IAAE,EAAC,IAAI,CAACD,KAAK,CAACE,IAAI;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9CjB,OAAA;QAAAa,QAAA,GAAK,IAAI,CAACT,KAAK,CAACG,GAAG,CAACC,IAAI,EAAC,IAAE,EAAC,IAAI,CAACJ,KAAK,CAACG,GAAG,CAACE,GAAG;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEpDjB,OAAA;QAAQkB,OAAO,EAAE,IAAI,CAACR,YAAa;QAAAG,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/CjB,OAAA;QAAAa,QAAA,gBACIb,OAAA;UAAAa,QAAA,GAAI,oBAAG,EAAC,IAAI,CAACM,KAAK,CAACX,IAAI;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7BjB,OAAA;UAAAa,QAAA,GAAI,eAAG,EAAC,IAAI,CAACM,KAAK,CAACV,GAAG;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5BjB,OAAA;UAAAa,QAAA,GAAI,gBAAI,EAAC,IAAI,CAACM,KAAK,CAACC,MAAM;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAEd;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}