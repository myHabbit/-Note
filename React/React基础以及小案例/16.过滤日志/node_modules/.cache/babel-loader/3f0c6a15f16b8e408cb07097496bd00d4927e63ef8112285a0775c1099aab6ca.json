{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G1330\\\\Desktop\\\\react\\\\11.\\u6DFB\\u52A0\\u4E00\\u4E2A\\u8868\\u5355\\u540D\\\\src\\\\LogsForm\\\\LogsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../Components/UI/Card/Card';\nimport './logsForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogsForm() {\n  _s();\n  /* \r\n    当表单项发生变化时候获取用户输入的内容\r\n    \r\n  */\n\n  // 创建三个变量 存储表单数据\n\n  // const [inputDate, setInputDate] = useState('')\n  // const [inputDesc, setInputDesc] = useState('')\n  // const [inputTime, setInputTime] = useState('')\n\n  // 将表单数据统一到一个state中\n  const [formDate, setFormDate] = useState({\n    inputDate: '',\n    inputDesc: '',\n    inputTime: ''\n  });\n\n  //   创建一个响应函数，监听日期的变化\n  const dateChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中 保存了当前事件触发时的所有信息\n    // e.target 指向的是触发事件的对象\n    // console.log(e.target.value)\n    // setInputDate(e.target.value)\n    setFormDate({\n      ...formDate,\n      inputDate: e.target.value\n    });\n  };\n  //   创建一个响应函数，监听时长的变化\n  const timeChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中 保存了当前事件触发时的所有信息\n    // e.target 指向的是触发事件的对象\n    // console.log(e.target.value)\n    // setInputTime(e.target.value)\n    setFormDate({\n      ...formDate,\n      inputTime: e.target.value\n    });\n  };\n\n  //   创建一个响应函数，监听表单的变化\n  /* \r\n     在react 中  表单不需要自行提交\r\n         而是要通过react提交\r\n  */\n\n  const descChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中 保存了当前事件触发时的所有信息\n    // e.target 指向的是触发事件的对象\n    // console.log(e.target.value)\n    // setInputDesc(e.target.value)\n    setFormDate({\n      ...formDate,\n      inputDesc: e.target.value\n    });\n  };\n\n  // 当表单提交时候 我们要汇总表单数据\n  const formSubmitHandler = e => {\n    e.preventDefault(); //阻止表单的默认行为\n\n    // 获取表单内容\n    // 将数据拼装成一个对象\n    const newLog = {\n      date: new Date(inputDate),\n      desc: inputDesc,\n      time: +inputTime\n    };\n    console.log(newLog);\n    // 清空表单项\n    setInputDate('');\n    setInputDesc('');\n    setInputTime('');\n\n    /* \r\n       提交表单后 如何清空表单中的旧数据\r\n            -- 现在这种表单 在react我们称为非受控组件\r\n            我们可以将表单中的数据存储在state中 将state设置为表单项的value值\r\n            这样表单项发生变化 state随之发生变化\r\n            反之 state发生变化 表单项也会跟着改变  这种操作叫做双向绑定\r\n            这样一来 表单就成为了一个受控组件\r\n        \r\n    \r\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"\\u65E5\\u671F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: dateChangeHandler,\n          value: inputDate,\n          id: \"date\",\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"desc\",\n          children: \"\\u5185\\u5BB9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"desc\",\n          onChange: descChangeHandler,\n          value: inputDesc,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"\\u65F6\\u957F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: timeChangeHandler,\n          value: inputTime,\n          id: \"time\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u6DFB\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(LogsForm, \"Amy/alaB397NCpH32Bvk2/B82RA=\");\n_c = LogsForm;\nvar _c;\n$RefreshReg$(_c, \"LogsForm\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","LogsForm","_s","formDate","setFormDate","inputDate","inputDesc","inputTime","dateChangeHandler","e","target","value","timeChangeHandler","descChangeHandler","formSubmitHandler","preventDefault","newLog","date","Date","desc","time","console","log","setInputDate","setInputDesc","setInputTime","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","type","_c","$RefreshReg$"],"sources":["C:/Users/G1330/Desktop/react/11.添加一个表单名/src/LogsForm/LogsForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Card from '../Components/UI/Card/Card'\r\nimport './logsForm.css'\r\nexport default function LogsForm() {\r\n\r\n    /* \r\n      当表单项发生变化时候获取用户输入的内容\r\n      \r\n    */\r\n\r\n    // 创建三个变量 存储表单数据\r\n\r\n\r\n\r\n    // const [inputDate, setInputDate] = useState('')\r\n    // const [inputDesc, setInputDesc] = useState('')\r\n    // const [inputTime, setInputTime] = useState('')\r\n\r\n    // 将表单数据统一到一个state中\r\n    const [formDate, setFormDate] = useState({\r\n        inputDate: '',\r\n        inputDesc: '',\r\n        inputTime: ''\r\n    })\r\n\r\n\r\n \r\n    //   创建一个响应函数，监听日期的变化\r\n    const dateChangeHandler = (e) => {\r\n        // 获取到当前触发事件的对象\r\n        // 事件对象中 保存了当前事件触发时的所有信息\r\n        // e.target 指向的是触发事件的对象\r\n        // console.log(e.target.value)\r\n        // setInputDate(e.target.value)\r\n        setFormDate({\r\n            ...formDate,\r\n            inputDate:e.target.value\r\n        })\r\n    }\r\n    //   创建一个响应函数，监听时长的变化\r\n    const timeChangeHandler = (e) => {\r\n        // 获取到当前触发事件的对象\r\n        // 事件对象中 保存了当前事件触发时的所有信息\r\n        // e.target 指向的是触发事件的对象\r\n        // console.log(e.target.value)\r\n        // setInputTime(e.target.value)\r\n        setFormDate({\r\n            ...formDate,\r\n            inputTime:e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    //   创建一个响应函数，监听表单的变化\r\n    /* \r\n       在react 中  表单不需要自行提交\r\n           而是要通过react提交\r\n    */\r\n\r\n    const descChangeHandler = (e) => {\r\n        // 获取到当前触发事件的对象\r\n        // 事件对象中 保存了当前事件触发时的所有信息\r\n        // e.target 指向的是触发事件的对象\r\n        // console.log(e.target.value)\r\n        // setInputDesc(e.target.value)\r\n        setFormDate({\r\n            ...formDate,\r\n            inputDesc:e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    // 当表单提交时候 我们要汇总表单数据\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();    //阻止表单的默认行为\r\n\r\n        // 获取表单内容\r\n        // 将数据拼装成一个对象\r\n        const newLog = {\r\n            date: new Date(inputDate),\r\n            desc: inputDesc,\r\n            time: +inputTime\r\n        }\r\n        console.log(newLog)\r\n        // 清空表单项\r\n        setInputDate('')\r\n        setInputDesc('')\r\n        setInputTime('')\r\n\r\n        /* \r\n           提交表单后 如何清空表单中的旧数据\r\n                -- 现在这种表单 在react我们称为非受控组件\r\n                我们可以将表单中的数据存储在state中 将state设置为表单项的value值\r\n                这样表单项发生变化 state随之发生变化\r\n                反之 state发生变化 表单项也会跟着改变  这种操作叫做双向绑定\r\n                这样一来 表单就成为了一个受控组件\r\n            \r\n        \r\n        */\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Card className='logs-form'>\r\n            <form onSubmit={formSubmitHandler}>\r\n                <div className='form-item' >\r\n                    <label htmlFor='date'>日期</label>\r\n                    <input onChange={dateChangeHandler} value={inputDate} id='date' type='date' />\r\n                </div>\r\n                <div className='form-item'>\r\n                    <label htmlFor='desc'>内容</label>\r\n                    <input id='desc' onChange={descChangeHandler} value={inputDesc} type='text' />\r\n                </div>\r\n                <div className='form-item'>\r\n                    <label htmlFor='time'>时长</label>\r\n                    <input onChange={timeChangeHandler} value={inputTime} id='time' type='number' />\r\n                </div>\r\n                <div className='form-btn'>\r\n                    <button>添加</button>\r\n                </div>\r\n            </form>\r\n        </Card>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAE/B;AACJ;AACA;AACA;;EAEI;;EAIA;EACA;EACA;;EAEA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE;EACf,CAAC,CAAC;;EAIF;EACA,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC7B;IACA;IACA;IACA;IACA;IACAL,WAAW,CAAC;MACR,GAAGD,QAAQ;MACXE,SAAS,EAACI,CAAC,CAACC,MAAM,CAACC;IACvB,CAAC,CAAC;EACN,CAAC;EACD;EACA,MAAMC,iBAAiB,GAAIH,CAAC,IAAK;IAC7B;IACA;IACA;IACA;IACA;IACAL,WAAW,CAAC;MACR,GAAGD,QAAQ;MACXI,SAAS,EAACE,CAAC,CAACC,MAAM,CAACC;IACvB,CAAC,CAAC;EACN,CAAC;;EAGD;EACA;AACJ;AACA;AACA;;EAEI,MAAME,iBAAiB,GAAIJ,CAAC,IAAK;IAC7B;IACA;IACA;IACA;IACA;IACAL,WAAW,CAAC;MACR,GAAGD,QAAQ;MACXG,SAAS,EAACG,CAAC,CAACC,MAAM,CAACC;IACvB,CAAC,CAAC;EAEN,CAAC;;EAED;EACA,MAAMG,iBAAiB,GAAIL,CAAC,IAAK;IAC7BA,CAAC,CAACM,cAAc,CAAC,CAAC,CAAC,CAAI;;IAEvB;IACA;IACA,MAAMC,MAAM,GAAG;MACXC,IAAI,EAAE,IAAIC,IAAI,CAACb,SAAS,CAAC;MACzBc,IAAI,EAAEb,SAAS;MACfc,IAAI,EAAE,CAACb;IACX,CAAC;IACDc,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;IACnB;IACAO,YAAY,CAAC,EAAE,CAAC;IAChBC,YAAY,CAAC,EAAE,CAAC;IAChBC,YAAY,CAAC,EAAE,CAAC;;IAEhB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEI,CAAC;;EAGD,oBACIzB,OAAA,CAACF,IAAI;IAAC4B,SAAS,EAAC,WAAW;IAAAC,QAAA,eACvB3B,OAAA;MAAM4B,QAAQ,EAAEd,iBAAkB;MAAAa,QAAA,gBAC9B3B,OAAA;QAAK0B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtB3B,OAAA;UAAO6B,OAAO,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCjC,OAAA;UAAOkC,QAAQ,EAAE1B,iBAAkB;UAACG,KAAK,EAAEN,SAAU;UAAC8B,EAAE,EAAC,MAAM;UAACC,IAAI,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACNjC,OAAA;QAAK0B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtB3B,OAAA;UAAO6B,OAAO,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCjC,OAAA;UAAOmC,EAAE,EAAC,MAAM;UAACD,QAAQ,EAAErB,iBAAkB;UAACF,KAAK,EAAEL,SAAU;UAAC8B,IAAI,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACNjC,OAAA;QAAK0B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtB3B,OAAA;UAAO6B,OAAO,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCjC,OAAA;UAAOkC,QAAQ,EAAEtB,iBAAkB;UAACD,KAAK,EAAEJ,SAAU;UAAC4B,EAAE,EAAC,MAAM;UAACC,IAAI,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACNjC,OAAA;QAAK0B,SAAS,EAAC,UAAU;QAAAC,QAAA,eACrB3B,OAAA;UAAA2B,QAAA,EAAQ;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEf;AAAC/B,EAAA,CAzHuBD,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}