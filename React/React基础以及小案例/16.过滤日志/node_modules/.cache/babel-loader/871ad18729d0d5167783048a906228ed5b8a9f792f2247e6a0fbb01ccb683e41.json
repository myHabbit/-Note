{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G1330\\\\Desktop\\\\react\\\\14.\\u5220\\u9664\\u4E00\\u4E2A\\u8868\\u5355\\u6570\\u636E\\\\src\\\\Components\\\\Logs\\\\Logs.js\";\n/* \r\n   日志的容器\r\n*/\n\nimport LogItem from '../Logs/LogItem';\nimport '../Logs/Logs.css';\nimport Card from '../UI/Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = props => {\n  /* \r\n    logsDate用来存储学习日志  \r\n       这个数据除了当前组件logs需要使用外 logsform也需要使用\r\n        当遇到一个数据需要被多个组件使用时 我们可以将数据放在这些组件公共的祖先元素中\r\n        这样可以使得多个组件都能方便的访问到这个数据\r\n            state的提升\r\n  \r\n  */\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs\",\n    children: props.logsData.map((item, index) => /*#__PURE__*/_jsxDEV(LogItem\n    // logIndex={index}\n    , {\n      onDelLog: () => props.onDelLog(index),\n      date: item.date,\n      desc: item.desc,\n      time: item.time\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 49\n    }, this))\n    // logsData.map(item => <LogItem {...item} />)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["LogItem","Card","jsxDEV","_jsxDEV","Logs","props","className","children","logsData","map","item","index","onDelLog","date","desc","time","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/G1330/Desktop/react/14.删除一个表单数据/src/Components/Logs/Logs.js"],"sourcesContent":["/* \r\n   日志的容器\r\n*/\r\n\r\nimport LogItem from '../Logs/LogItem'\r\nimport '../Logs/Logs.css'\r\nimport Card from '../UI/Card/Card'\r\n\r\nconst Logs = (props) => {\r\n\r\n    /* \r\n      logsDate用来存储学习日志  \r\n         这个数据除了当前组件logs需要使用外 logsform也需要使用\r\n          当遇到一个数据需要被多个组件使用时 我们可以将数据放在这些组件公共的祖先元素中\r\n          这样可以使得多个组件都能方便的访问到这个数据\r\n\r\n\r\n          state的提升\r\n    \r\n    */\r\n\r\n\r\n\r\n    return <Card className='logs'>\r\n        {/* \r\n           在父组件中可以直接在子组件中设置属性\r\n        */}\r\n        {\r\n\r\n            props.logsData.map((item, index) => <LogItem\r\n                // logIndex={index}\r\n                onDelLog={() => props.onDelLog(index)} key={item.id}\r\n                date={item.date} desc={item.desc} time={item.time} />)\r\n            // logsData.map(item => <LogItem {...item} />)\r\n        }\r\n    </Card>\r\n}\r\n\r\nexport default Logs"],"mappings":";AAAA;AACA;AACA;;AAEA,OAAOA,OAAO,MAAM,iBAAiB;AACrC,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;EAMI,oBAAOF,OAAA,CAACF,IAAI;IAACK,SAAS,EAAC,MAAM;IAAAC,QAAA,EAMrBF,KAAK,CAACG,QAAQ,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKR,OAAA,CAACH;IACjC;IAAA;MACAY,QAAQ,EAAEA,CAAA,KAAMP,KAAK,CAACO,QAAQ,CAACD,KAAK,CAAE;MACtCE,IAAI,EAAEH,IAAI,CAACG,IAAK;MAACC,IAAI,EAAEJ,IAAI,CAACI,IAAK;MAACC,IAAI,EAAEL,IAAI,CAACK;IAAK,GADNL,IAAI,CAACM,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;IACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AACX,CAAC;AAAAC,EAAA,GA5BKjB,IAAI;AA8BV,eAAeA,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}