{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G1330\\\\Desktop\\\\react\\\\11.\\u6DFB\\u52A0\\u4E00\\u4E2A\\u8868\\u5355\\u540D\\\\src\\\\LogsForm\\\\LogsForm.js\";\nimport React from 'react';\nimport Card from '../Components/UI/Card/Card';\nimport './logsForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogsForm() {\n  /* \r\n    当表单项发生变化时候获取用户输入的内容\r\n    \r\n  */\n\n  //   创建一个响应函数，监听日期的变化\n  const dateChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中 保存了当前事件触发时的所有信息\n    // e.target 指向的是触发事件的对象\n    // console.log(e.target.value)\n  };\n  //   创建一个响应函数，监听时长的变化\n  const timeChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中 保存了当前事件触发时的所有信息\n    // e.target 指向的是触发事件的对象\n    // console.log(e.target.value)\n  };\n\n  //   创建一个响应函数，监听表单的变化\n  const descChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中 保存了当前事件触发时的所有信息\n    // e.target 指向的是触发事件的对象\n    // console.log(e.target.value)\n  };\n\n  // 当表单提交时候 我们要汇总表单数据\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"\\u65E5\\u671F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: dateChangeHandler,\n          id: \"date\",\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"desc\",\n          children: \"\\u5185\\u5BB9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"desc\",\n          onChange: descChangeHandler,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"\\u65F6\\u957F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: timeChangeHandler,\n          id: \"time\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u6DFB\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c = LogsForm;\nvar _c;\n$RefreshReg$(_c, \"LogsForm\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","LogsForm","dateChangeHandler","e","timeChangeHandler","descChangeHandler","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","type","_c","$RefreshReg$"],"sources":["C:/Users/G1330/Desktop/react/11.添加一个表单名/src/LogsForm/LogsForm.js"],"sourcesContent":["import React from 'react'\r\nimport Card from '../Components/UI/Card/Card'\r\nimport './logsForm.css'\r\nexport default function LogsForm() {\r\n\r\n    /* \r\n      当表单项发生变化时候获取用户输入的内容\r\n      \r\n    */\r\n\r\n    //   创建一个响应函数，监听日期的变化\r\n    const dateChangeHandler = (e) => {\r\n        // 获取到当前触发事件的对象\r\n        // 事件对象中 保存了当前事件触发时的所有信息\r\n        // e.target 指向的是触发事件的对象\r\n        // console.log(e.target.value)\r\n    }\r\n    //   创建一个响应函数，监听时长的变化\r\n    const timeChangeHandler = (e) => {\r\n        // 获取到当前触发事件的对象\r\n        // 事件对象中 保存了当前事件触发时的所有信息\r\n        // e.target 指向的是触发事件的对象\r\n        // console.log(e.target.value)\r\n    }\r\n\r\n\r\n    //   创建一个响应函数，监听表单的变化\r\n    const descChangeHandler = (e) => {\r\n        // 获取到当前触发事件的对象\r\n        // 事件对象中 保存了当前事件触发时的所有信息\r\n        // e.target 指向的是触发事件的对象\r\n        // console.log(e.target.value)\r\n    }\r\n    \r\n    // 当表单提交时候 我们要汇总表单数据\r\n\r\n\r\n    return (\r\n        <Card className='logs-form'>\r\n            <form>\r\n                <div className='form-item' >\r\n                    <label htmlFor='date'>日期</label>\r\n                    <input onChange={dateChangeHandler} id='date' type='date' />\r\n                </div>\r\n                <div className='form-item'>\r\n                    <label htmlFor='desc'>内容</label>\r\n                    <input id='desc' onChange={descChangeHandler} type='text' />\r\n                </div>\r\n                <div className='form-item'>\r\n                    <label htmlFor='time'>时长</label>\r\n                    <input onChange={timeChangeHandler} id='time' type='number' />\r\n                </div>\r\n                <div className='form-btn'>\r\n                    <button>添加</button>\r\n                </div>\r\n            </form>\r\n        </Card>\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAE/B;AACJ;AACA;AACA;;EAEI;EACA,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC7B;IACA;IACA;IACA;EAAA,CACH;EACD;EACA,MAAMC,iBAAiB,GAAID,CAAC,IAAK;IAC7B;IACA;IACA;IACA;EAAA,CACH;;EAGD;EACA,MAAME,iBAAiB,GAAIF,CAAC,IAAK;IAC7B;IACA;IACA;IACA;EAAA,CACH;;EAED;;EAGA,oBACIH,OAAA,CAACF,IAAI;IAACQ,SAAS,EAAC,WAAW;IAAAC,QAAA,eACvBP,OAAA;MAAAO,QAAA,gBACIP,OAAA;QAAKM,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBP,OAAA;UAAOQ,OAAO,EAAC,MAAM;UAAAD,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCZ,OAAA;UAAOa,QAAQ,EAAEX,iBAAkB;UAACY,EAAE,EAAC,MAAM;UAACC,IAAI,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACNZ,OAAA;QAAKM,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBP,OAAA;UAAOQ,OAAO,EAAC,MAAM;UAAAD,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCZ,OAAA;UAAOc,EAAE,EAAC,MAAM;UAACD,QAAQ,EAAER,iBAAkB;UAACU,IAAI,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACNZ,OAAA;QAAKM,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBP,OAAA;UAAOQ,OAAO,EAAC,MAAM;UAAAD,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChCZ,OAAA;UAAOa,QAAQ,EAAET,iBAAkB;UAACU,EAAE,EAAC,MAAM;UAACC,IAAI,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACNZ,OAAA;QAAKM,SAAS,EAAC,UAAU;QAAAC,QAAA,eACrBP,OAAA;UAAAO,QAAA,EAAQ;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEf;AAACI,EAAA,GAvDuBf,QAAQ;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}